/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.demo.redis.patterns.dto;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class BookingAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -925351504006220294L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"BookingAvro\",\"namespace\":\"com.demo.redis.patterns.dto\",\"fields\":[{\"name\":\"bookingNumber\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"product\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"remarkExternal\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"remarkInternal\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"summaryDescriptionOfGoods\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"summaryMarksAndNumbers\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"totalBookedGrossWeight\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"totalBookedInnerItemQuantity\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"totalBookedItemQuantity\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"totalBookedNetNetWeight\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"totalBookedNetWeight\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"totalBookedPackageQuantity\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"totalBookedVolume\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"totalCargoValue\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<BookingAvro> ENCODER =
      new BinaryMessageEncoder<BookingAvro>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<BookingAvro> DECODER =
      new BinaryMessageDecoder<BookingAvro>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<BookingAvro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<BookingAvro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<BookingAvro>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this BookingAvro to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a BookingAvro from a ByteBuffer. */
  public static BookingAvro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public String bookingNumber;
  @Deprecated public String product;
  @Deprecated public String remarkExternal;
  @Deprecated public String remarkInternal;
  @Deprecated public String summaryDescriptionOfGoods;
  @Deprecated public String summaryMarksAndNumbers;
  @Deprecated public String totalBookedGrossWeight;
  @Deprecated public String totalBookedInnerItemQuantity;
  @Deprecated public String totalBookedItemQuantity;
  @Deprecated public String totalBookedNetNetWeight;
  @Deprecated public String totalBookedNetWeight;
  @Deprecated public String totalBookedPackageQuantity;
  @Deprecated public String totalBookedVolume;
  @Deprecated public String totalCargoValue;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public BookingAvro() {}

  /**
   * All-args constructor.
   * @param bookingNumber The new value for bookingNumber
   * @param product The new value for product
   * @param remarkExternal The new value for remarkExternal
   * @param remarkInternal The new value for remarkInternal
   * @param summaryDescriptionOfGoods The new value for summaryDescriptionOfGoods
   * @param summaryMarksAndNumbers The new value for summaryMarksAndNumbers
   * @param totalBookedGrossWeight The new value for totalBookedGrossWeight
   * @param totalBookedInnerItemQuantity The new value for totalBookedInnerItemQuantity
   * @param totalBookedItemQuantity The new value for totalBookedItemQuantity
   * @param totalBookedNetNetWeight The new value for totalBookedNetNetWeight
   * @param totalBookedNetWeight The new value for totalBookedNetWeight
   * @param totalBookedPackageQuantity The new value for totalBookedPackageQuantity
   * @param totalBookedVolume The new value for totalBookedVolume
   * @param totalCargoValue The new value for totalCargoValue
   */
  public BookingAvro(String bookingNumber, String product, String remarkExternal, String remarkInternal, String summaryDescriptionOfGoods, String summaryMarksAndNumbers, String totalBookedGrossWeight, String totalBookedInnerItemQuantity, String totalBookedItemQuantity, String totalBookedNetNetWeight, String totalBookedNetWeight, String totalBookedPackageQuantity, String totalBookedVolume, String totalCargoValue) {
    this.bookingNumber = bookingNumber;
    this.product = product;
    this.remarkExternal = remarkExternal;
    this.remarkInternal = remarkInternal;
    this.summaryDescriptionOfGoods = summaryDescriptionOfGoods;
    this.summaryMarksAndNumbers = summaryMarksAndNumbers;
    this.totalBookedGrossWeight = totalBookedGrossWeight;
    this.totalBookedInnerItemQuantity = totalBookedInnerItemQuantity;
    this.totalBookedItemQuantity = totalBookedItemQuantity;
    this.totalBookedNetNetWeight = totalBookedNetNetWeight;
    this.totalBookedNetWeight = totalBookedNetWeight;
    this.totalBookedPackageQuantity = totalBookedPackageQuantity;
    this.totalBookedVolume = totalBookedVolume;
    this.totalCargoValue = totalCargoValue;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public Object get(int field$) {
    switch (field$) {
    case 0: return bookingNumber;
    case 1: return product;
    case 2: return remarkExternal;
    case 3: return remarkInternal;
    case 4: return summaryDescriptionOfGoods;
    case 5: return summaryMarksAndNumbers;
    case 6: return totalBookedGrossWeight;
    case 7: return totalBookedInnerItemQuantity;
    case 8: return totalBookedItemQuantity;
    case 9: return totalBookedNetNetWeight;
    case 10: return totalBookedNetWeight;
    case 11: return totalBookedPackageQuantity;
    case 12: return totalBookedVolume;
    case 13: return totalCargoValue;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: bookingNumber = (String)value$; break;
    case 1: product = (String)value$; break;
    case 2: remarkExternal = (String)value$; break;
    case 3: remarkInternal = (String)value$; break;
    case 4: summaryDescriptionOfGoods = (String)value$; break;
    case 5: summaryMarksAndNumbers = (String)value$; break;
    case 6: totalBookedGrossWeight = (String)value$; break;
    case 7: totalBookedInnerItemQuantity = (String)value$; break;
    case 8: totalBookedItemQuantity = (String)value$; break;
    case 9: totalBookedNetNetWeight = (String)value$; break;
    case 10: totalBookedNetWeight = (String)value$; break;
    case 11: totalBookedPackageQuantity = (String)value$; break;
    case 12: totalBookedVolume = (String)value$; break;
    case 13: totalCargoValue = (String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'bookingNumber' field.
   * @return The value of the 'bookingNumber' field.
   */
  public String getBookingNumber() {
    return bookingNumber;
  }

  /**
   * Sets the value of the 'bookingNumber' field.
   * @param value the value to set.
   */
  public void setBookingNumber(String value) {
    this.bookingNumber = value;
  }

  /**
   * Gets the value of the 'product' field.
   * @return The value of the 'product' field.
   */
  public String getProduct() {
    return product;
  }

  /**
   * Sets the value of the 'product' field.
   * @param value the value to set.
   */
  public void setProduct(String value) {
    this.product = value;
  }

  /**
   * Gets the value of the 'remarkExternal' field.
   * @return The value of the 'remarkExternal' field.
   */
  public String getRemarkExternal() {
    return remarkExternal;
  }

  /**
   * Sets the value of the 'remarkExternal' field.
   * @param value the value to set.
   */
  public void setRemarkExternal(String value) {
    this.remarkExternal = value;
  }

  /**
   * Gets the value of the 'remarkInternal' field.
   * @return The value of the 'remarkInternal' field.
   */
  public String getRemarkInternal() {
    return remarkInternal;
  }

  /**
   * Sets the value of the 'remarkInternal' field.
   * @param value the value to set.
   */
  public void setRemarkInternal(String value) {
    this.remarkInternal = value;
  }

  /**
   * Gets the value of the 'summaryDescriptionOfGoods' field.
   * @return The value of the 'summaryDescriptionOfGoods' field.
   */
  public String getSummaryDescriptionOfGoods() {
    return summaryDescriptionOfGoods;
  }

  /**
   * Sets the value of the 'summaryDescriptionOfGoods' field.
   * @param value the value to set.
   */
  public void setSummaryDescriptionOfGoods(String value) {
    this.summaryDescriptionOfGoods = value;
  }

  /**
   * Gets the value of the 'summaryMarksAndNumbers' field.
   * @return The value of the 'summaryMarksAndNumbers' field.
   */
  public String getSummaryMarksAndNumbers() {
    return summaryMarksAndNumbers;
  }

  /**
   * Sets the value of the 'summaryMarksAndNumbers' field.
   * @param value the value to set.
   */
  public void setSummaryMarksAndNumbers(String value) {
    this.summaryMarksAndNumbers = value;
  }

  /**
   * Gets the value of the 'totalBookedGrossWeight' field.
   * @return The value of the 'totalBookedGrossWeight' field.
   */
  public String getTotalBookedGrossWeight() {
    return totalBookedGrossWeight;
  }

  /**
   * Sets the value of the 'totalBookedGrossWeight' field.
   * @param value the value to set.
   */
  public void setTotalBookedGrossWeight(String value) {
    this.totalBookedGrossWeight = value;
  }

  /**
   * Gets the value of the 'totalBookedInnerItemQuantity' field.
   * @return The value of the 'totalBookedInnerItemQuantity' field.
   */
  public String getTotalBookedInnerItemQuantity() {
    return totalBookedInnerItemQuantity;
  }

  /**
   * Sets the value of the 'totalBookedInnerItemQuantity' field.
   * @param value the value to set.
   */
  public void setTotalBookedInnerItemQuantity(String value) {
    this.totalBookedInnerItemQuantity = value;
  }

  /**
   * Gets the value of the 'totalBookedItemQuantity' field.
   * @return The value of the 'totalBookedItemQuantity' field.
   */
  public String getTotalBookedItemQuantity() {
    return totalBookedItemQuantity;
  }

  /**
   * Sets the value of the 'totalBookedItemQuantity' field.
   * @param value the value to set.
   */
  public void setTotalBookedItemQuantity(String value) {
    this.totalBookedItemQuantity = value;
  }

  /**
   * Gets the value of the 'totalBookedNetNetWeight' field.
   * @return The value of the 'totalBookedNetNetWeight' field.
   */
  public String getTotalBookedNetNetWeight() {
    return totalBookedNetNetWeight;
  }

  /**
   * Sets the value of the 'totalBookedNetNetWeight' field.
   * @param value the value to set.
   */
  public void setTotalBookedNetNetWeight(String value) {
    this.totalBookedNetNetWeight = value;
  }

  /**
   * Gets the value of the 'totalBookedNetWeight' field.
   * @return The value of the 'totalBookedNetWeight' field.
   */
  public String getTotalBookedNetWeight() {
    return totalBookedNetWeight;
  }

  /**
   * Sets the value of the 'totalBookedNetWeight' field.
   * @param value the value to set.
   */
  public void setTotalBookedNetWeight(String value) {
    this.totalBookedNetWeight = value;
  }

  /**
   * Gets the value of the 'totalBookedPackageQuantity' field.
   * @return The value of the 'totalBookedPackageQuantity' field.
   */
  public String getTotalBookedPackageQuantity() {
    return totalBookedPackageQuantity;
  }

  /**
   * Sets the value of the 'totalBookedPackageQuantity' field.
   * @param value the value to set.
   */
  public void setTotalBookedPackageQuantity(String value) {
    this.totalBookedPackageQuantity = value;
  }

  /**
   * Gets the value of the 'totalBookedVolume' field.
   * @return The value of the 'totalBookedVolume' field.
   */
  public String getTotalBookedVolume() {
    return totalBookedVolume;
  }

  /**
   * Sets the value of the 'totalBookedVolume' field.
   * @param value the value to set.
   */
  public void setTotalBookedVolume(String value) {
    this.totalBookedVolume = value;
  }

  /**
   * Gets the value of the 'totalCargoValue' field.
   * @return The value of the 'totalCargoValue' field.
   */
  public String getTotalCargoValue() {
    return totalCargoValue;
  }

  /**
   * Sets the value of the 'totalCargoValue' field.
   * @param value the value to set.
   */
  public void setTotalCargoValue(String value) {
    this.totalCargoValue = value;
  }

  /**
   * Creates a new BookingAvro RecordBuilder.
   * @return A new BookingAvro RecordBuilder
   */
  public static com.demo.redis.patterns.dto.BookingAvro.Builder newBuilder() {
    return new com.demo.redis.patterns.dto.BookingAvro.Builder();
  }

  /**
   * Creates a new BookingAvro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new BookingAvro RecordBuilder
   */
  public static com.demo.redis.patterns.dto.BookingAvro.Builder newBuilder(com.demo.redis.patterns.dto.BookingAvro.Builder other) {
    return new com.demo.redis.patterns.dto.BookingAvro.Builder(other);
  }

  /**
   * Creates a new BookingAvro RecordBuilder by copying an existing BookingAvro instance.
   * @param other The existing instance to copy.
   * @return A new BookingAvro RecordBuilder
   */
  public static com.demo.redis.patterns.dto.BookingAvro.Builder newBuilder(com.demo.redis.patterns.dto.BookingAvro other) {
    return new com.demo.redis.patterns.dto.BookingAvro.Builder(other);
  }

  /**
   * RecordBuilder for BookingAvro instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<BookingAvro>
    implements org.apache.avro.data.RecordBuilder<BookingAvro> {

    private String bookingNumber;
    private String product;
    private String remarkExternal;
    private String remarkInternal;
    private String summaryDescriptionOfGoods;
    private String summaryMarksAndNumbers;
    private String totalBookedGrossWeight;
    private String totalBookedInnerItemQuantity;
    private String totalBookedItemQuantity;
    private String totalBookedNetNetWeight;
    private String totalBookedNetWeight;
    private String totalBookedPackageQuantity;
    private String totalBookedVolume;
    private String totalCargoValue;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.demo.redis.patterns.dto.BookingAvro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.bookingNumber)) {
        this.bookingNumber = data().deepCopy(fields()[0].schema(), other.bookingNumber);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.product)) {
        this.product = data().deepCopy(fields()[1].schema(), other.product);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.remarkExternal)) {
        this.remarkExternal = data().deepCopy(fields()[2].schema(), other.remarkExternal);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.remarkInternal)) {
        this.remarkInternal = data().deepCopy(fields()[3].schema(), other.remarkInternal);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.summaryDescriptionOfGoods)) {
        this.summaryDescriptionOfGoods = data().deepCopy(fields()[4].schema(), other.summaryDescriptionOfGoods);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.summaryMarksAndNumbers)) {
        this.summaryMarksAndNumbers = data().deepCopy(fields()[5].schema(), other.summaryMarksAndNumbers);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.totalBookedGrossWeight)) {
        this.totalBookedGrossWeight = data().deepCopy(fields()[6].schema(), other.totalBookedGrossWeight);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.totalBookedInnerItemQuantity)) {
        this.totalBookedInnerItemQuantity = data().deepCopy(fields()[7].schema(), other.totalBookedInnerItemQuantity);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.totalBookedItemQuantity)) {
        this.totalBookedItemQuantity = data().deepCopy(fields()[8].schema(), other.totalBookedItemQuantity);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.totalBookedNetNetWeight)) {
        this.totalBookedNetNetWeight = data().deepCopy(fields()[9].schema(), other.totalBookedNetNetWeight);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.totalBookedNetWeight)) {
        this.totalBookedNetWeight = data().deepCopy(fields()[10].schema(), other.totalBookedNetWeight);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.totalBookedPackageQuantity)) {
        this.totalBookedPackageQuantity = data().deepCopy(fields()[11].schema(), other.totalBookedPackageQuantity);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.totalBookedVolume)) {
        this.totalBookedVolume = data().deepCopy(fields()[12].schema(), other.totalBookedVolume);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.totalCargoValue)) {
        this.totalCargoValue = data().deepCopy(fields()[13].schema(), other.totalCargoValue);
        fieldSetFlags()[13] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing BookingAvro instance
     * @param other The existing instance to copy.
     */
    private Builder(com.demo.redis.patterns.dto.BookingAvro other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.bookingNumber)) {
        this.bookingNumber = data().deepCopy(fields()[0].schema(), other.bookingNumber);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.product)) {
        this.product = data().deepCopy(fields()[1].schema(), other.product);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.remarkExternal)) {
        this.remarkExternal = data().deepCopy(fields()[2].schema(), other.remarkExternal);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.remarkInternal)) {
        this.remarkInternal = data().deepCopy(fields()[3].schema(), other.remarkInternal);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.summaryDescriptionOfGoods)) {
        this.summaryDescriptionOfGoods = data().deepCopy(fields()[4].schema(), other.summaryDescriptionOfGoods);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.summaryMarksAndNumbers)) {
        this.summaryMarksAndNumbers = data().deepCopy(fields()[5].schema(), other.summaryMarksAndNumbers);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.totalBookedGrossWeight)) {
        this.totalBookedGrossWeight = data().deepCopy(fields()[6].schema(), other.totalBookedGrossWeight);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.totalBookedInnerItemQuantity)) {
        this.totalBookedInnerItemQuantity = data().deepCopy(fields()[7].schema(), other.totalBookedInnerItemQuantity);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.totalBookedItemQuantity)) {
        this.totalBookedItemQuantity = data().deepCopy(fields()[8].schema(), other.totalBookedItemQuantity);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.totalBookedNetNetWeight)) {
        this.totalBookedNetNetWeight = data().deepCopy(fields()[9].schema(), other.totalBookedNetNetWeight);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.totalBookedNetWeight)) {
        this.totalBookedNetWeight = data().deepCopy(fields()[10].schema(), other.totalBookedNetWeight);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.totalBookedPackageQuantity)) {
        this.totalBookedPackageQuantity = data().deepCopy(fields()[11].schema(), other.totalBookedPackageQuantity);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.totalBookedVolume)) {
        this.totalBookedVolume = data().deepCopy(fields()[12].schema(), other.totalBookedVolume);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.totalCargoValue)) {
        this.totalCargoValue = data().deepCopy(fields()[13].schema(), other.totalCargoValue);
        fieldSetFlags()[13] = true;
      }
    }

    /**
      * Gets the value of the 'bookingNumber' field.
      * @return The value.
      */
    public String getBookingNumber() {
      return bookingNumber;
    }

    /**
      * Sets the value of the 'bookingNumber' field.
      * @param value The value of 'bookingNumber'.
      * @return This builder.
      */
    public com.demo.redis.patterns.dto.BookingAvro.Builder setBookingNumber(String value) {
      validate(fields()[0], value);
      this.bookingNumber = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'bookingNumber' field has been set.
      * @return True if the 'bookingNumber' field has been set, false otherwise.
      */
    public boolean hasBookingNumber() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'bookingNumber' field.
      * @return This builder.
      */
    public com.demo.redis.patterns.dto.BookingAvro.Builder clearBookingNumber() {
      bookingNumber = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'product' field.
      * @return The value.
      */
    public String getProduct() {
      return product;
    }

    /**
      * Sets the value of the 'product' field.
      * @param value The value of 'product'.
      * @return This builder.
      */
    public com.demo.redis.patterns.dto.BookingAvro.Builder setProduct(String value) {
      validate(fields()[1], value);
      this.product = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'product' field has been set.
      * @return True if the 'product' field has been set, false otherwise.
      */
    public boolean hasProduct() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'product' field.
      * @return This builder.
      */
    public com.demo.redis.patterns.dto.BookingAvro.Builder clearProduct() {
      product = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'remarkExternal' field.
      * @return The value.
      */
    public String getRemarkExternal() {
      return remarkExternal;
    }

    /**
      * Sets the value of the 'remarkExternal' field.
      * @param value The value of 'remarkExternal'.
      * @return This builder.
      */
    public com.demo.redis.patterns.dto.BookingAvro.Builder setRemarkExternal(String value) {
      validate(fields()[2], value);
      this.remarkExternal = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'remarkExternal' field has been set.
      * @return True if the 'remarkExternal' field has been set, false otherwise.
      */
    public boolean hasRemarkExternal() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'remarkExternal' field.
      * @return This builder.
      */
    public com.demo.redis.patterns.dto.BookingAvro.Builder clearRemarkExternal() {
      remarkExternal = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'remarkInternal' field.
      * @return The value.
      */
    public String getRemarkInternal() {
      return remarkInternal;
    }

    /**
      * Sets the value of the 'remarkInternal' field.
      * @param value The value of 'remarkInternal'.
      * @return This builder.
      */
    public com.demo.redis.patterns.dto.BookingAvro.Builder setRemarkInternal(String value) {
      validate(fields()[3], value);
      this.remarkInternal = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'remarkInternal' field has been set.
      * @return True if the 'remarkInternal' field has been set, false otherwise.
      */
    public boolean hasRemarkInternal() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'remarkInternal' field.
      * @return This builder.
      */
    public com.demo.redis.patterns.dto.BookingAvro.Builder clearRemarkInternal() {
      remarkInternal = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'summaryDescriptionOfGoods' field.
      * @return The value.
      */
    public String getSummaryDescriptionOfGoods() {
      return summaryDescriptionOfGoods;
    }

    /**
      * Sets the value of the 'summaryDescriptionOfGoods' field.
      * @param value The value of 'summaryDescriptionOfGoods'.
      * @return This builder.
      */
    public com.demo.redis.patterns.dto.BookingAvro.Builder setSummaryDescriptionOfGoods(String value) {
      validate(fields()[4], value);
      this.summaryDescriptionOfGoods = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'summaryDescriptionOfGoods' field has been set.
      * @return True if the 'summaryDescriptionOfGoods' field has been set, false otherwise.
      */
    public boolean hasSummaryDescriptionOfGoods() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'summaryDescriptionOfGoods' field.
      * @return This builder.
      */
    public com.demo.redis.patterns.dto.BookingAvro.Builder clearSummaryDescriptionOfGoods() {
      summaryDescriptionOfGoods = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'summaryMarksAndNumbers' field.
      * @return The value.
      */
    public String getSummaryMarksAndNumbers() {
      return summaryMarksAndNumbers;
    }

    /**
      * Sets the value of the 'summaryMarksAndNumbers' field.
      * @param value The value of 'summaryMarksAndNumbers'.
      * @return This builder.
      */
    public com.demo.redis.patterns.dto.BookingAvro.Builder setSummaryMarksAndNumbers(String value) {
      validate(fields()[5], value);
      this.summaryMarksAndNumbers = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'summaryMarksAndNumbers' field has been set.
      * @return True if the 'summaryMarksAndNumbers' field has been set, false otherwise.
      */
    public boolean hasSummaryMarksAndNumbers() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'summaryMarksAndNumbers' field.
      * @return This builder.
      */
    public com.demo.redis.patterns.dto.BookingAvro.Builder clearSummaryMarksAndNumbers() {
      summaryMarksAndNumbers = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalBookedGrossWeight' field.
      * @return The value.
      */
    public String getTotalBookedGrossWeight() {
      return totalBookedGrossWeight;
    }

    /**
      * Sets the value of the 'totalBookedGrossWeight' field.
      * @param value The value of 'totalBookedGrossWeight'.
      * @return This builder.
      */
    public com.demo.redis.patterns.dto.BookingAvro.Builder setTotalBookedGrossWeight(String value) {
      validate(fields()[6], value);
      this.totalBookedGrossWeight = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'totalBookedGrossWeight' field has been set.
      * @return True if the 'totalBookedGrossWeight' field has been set, false otherwise.
      */
    public boolean hasTotalBookedGrossWeight() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'totalBookedGrossWeight' field.
      * @return This builder.
      */
    public com.demo.redis.patterns.dto.BookingAvro.Builder clearTotalBookedGrossWeight() {
      totalBookedGrossWeight = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalBookedInnerItemQuantity' field.
      * @return The value.
      */
    public String getTotalBookedInnerItemQuantity() {
      return totalBookedInnerItemQuantity;
    }

    /**
      * Sets the value of the 'totalBookedInnerItemQuantity' field.
      * @param value The value of 'totalBookedInnerItemQuantity'.
      * @return This builder.
      */
    public com.demo.redis.patterns.dto.BookingAvro.Builder setTotalBookedInnerItemQuantity(String value) {
      validate(fields()[7], value);
      this.totalBookedInnerItemQuantity = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'totalBookedInnerItemQuantity' field has been set.
      * @return True if the 'totalBookedInnerItemQuantity' field has been set, false otherwise.
      */
    public boolean hasTotalBookedInnerItemQuantity() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'totalBookedInnerItemQuantity' field.
      * @return This builder.
      */
    public com.demo.redis.patterns.dto.BookingAvro.Builder clearTotalBookedInnerItemQuantity() {
      totalBookedInnerItemQuantity = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalBookedItemQuantity' field.
      * @return The value.
      */
    public String getTotalBookedItemQuantity() {
      return totalBookedItemQuantity;
    }

    /**
      * Sets the value of the 'totalBookedItemQuantity' field.
      * @param value The value of 'totalBookedItemQuantity'.
      * @return This builder.
      */
    public com.demo.redis.patterns.dto.BookingAvro.Builder setTotalBookedItemQuantity(String value) {
      validate(fields()[8], value);
      this.totalBookedItemQuantity = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'totalBookedItemQuantity' field has been set.
      * @return True if the 'totalBookedItemQuantity' field has been set, false otherwise.
      */
    public boolean hasTotalBookedItemQuantity() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'totalBookedItemQuantity' field.
      * @return This builder.
      */
    public com.demo.redis.patterns.dto.BookingAvro.Builder clearTotalBookedItemQuantity() {
      totalBookedItemQuantity = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalBookedNetNetWeight' field.
      * @return The value.
      */
    public String getTotalBookedNetNetWeight() {
      return totalBookedNetNetWeight;
    }

    /**
      * Sets the value of the 'totalBookedNetNetWeight' field.
      * @param value The value of 'totalBookedNetNetWeight'.
      * @return This builder.
      */
    public com.demo.redis.patterns.dto.BookingAvro.Builder setTotalBookedNetNetWeight(String value) {
      validate(fields()[9], value);
      this.totalBookedNetNetWeight = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'totalBookedNetNetWeight' field has been set.
      * @return True if the 'totalBookedNetNetWeight' field has been set, false otherwise.
      */
    public boolean hasTotalBookedNetNetWeight() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'totalBookedNetNetWeight' field.
      * @return This builder.
      */
    public com.demo.redis.patterns.dto.BookingAvro.Builder clearTotalBookedNetNetWeight() {
      totalBookedNetNetWeight = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalBookedNetWeight' field.
      * @return The value.
      */
    public String getTotalBookedNetWeight() {
      return totalBookedNetWeight;
    }

    /**
      * Sets the value of the 'totalBookedNetWeight' field.
      * @param value The value of 'totalBookedNetWeight'.
      * @return This builder.
      */
    public com.demo.redis.patterns.dto.BookingAvro.Builder setTotalBookedNetWeight(String value) {
      validate(fields()[10], value);
      this.totalBookedNetWeight = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'totalBookedNetWeight' field has been set.
      * @return True if the 'totalBookedNetWeight' field has been set, false otherwise.
      */
    public boolean hasTotalBookedNetWeight() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'totalBookedNetWeight' field.
      * @return This builder.
      */
    public com.demo.redis.patterns.dto.BookingAvro.Builder clearTotalBookedNetWeight() {
      totalBookedNetWeight = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalBookedPackageQuantity' field.
      * @return The value.
      */
    public String getTotalBookedPackageQuantity() {
      return totalBookedPackageQuantity;
    }

    /**
      * Sets the value of the 'totalBookedPackageQuantity' field.
      * @param value The value of 'totalBookedPackageQuantity'.
      * @return This builder.
      */
    public com.demo.redis.patterns.dto.BookingAvro.Builder setTotalBookedPackageQuantity(String value) {
      validate(fields()[11], value);
      this.totalBookedPackageQuantity = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'totalBookedPackageQuantity' field has been set.
      * @return True if the 'totalBookedPackageQuantity' field has been set, false otherwise.
      */
    public boolean hasTotalBookedPackageQuantity() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'totalBookedPackageQuantity' field.
      * @return This builder.
      */
    public com.demo.redis.patterns.dto.BookingAvro.Builder clearTotalBookedPackageQuantity() {
      totalBookedPackageQuantity = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalBookedVolume' field.
      * @return The value.
      */
    public String getTotalBookedVolume() {
      return totalBookedVolume;
    }

    /**
      * Sets the value of the 'totalBookedVolume' field.
      * @param value The value of 'totalBookedVolume'.
      * @return This builder.
      */
    public com.demo.redis.patterns.dto.BookingAvro.Builder setTotalBookedVolume(String value) {
      validate(fields()[12], value);
      this.totalBookedVolume = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'totalBookedVolume' field has been set.
      * @return True if the 'totalBookedVolume' field has been set, false otherwise.
      */
    public boolean hasTotalBookedVolume() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'totalBookedVolume' field.
      * @return This builder.
      */
    public com.demo.redis.patterns.dto.BookingAvro.Builder clearTotalBookedVolume() {
      totalBookedVolume = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalCargoValue' field.
      * @return The value.
      */
    public String getTotalCargoValue() {
      return totalCargoValue;
    }

    /**
      * Sets the value of the 'totalCargoValue' field.
      * @param value The value of 'totalCargoValue'.
      * @return This builder.
      */
    public com.demo.redis.patterns.dto.BookingAvro.Builder setTotalCargoValue(String value) {
      validate(fields()[13], value);
      this.totalCargoValue = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'totalCargoValue' field has been set.
      * @return True if the 'totalCargoValue' field has been set, false otherwise.
      */
    public boolean hasTotalCargoValue() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'totalCargoValue' field.
      * @return This builder.
      */
    public com.demo.redis.patterns.dto.BookingAvro.Builder clearTotalCargoValue() {
      totalCargoValue = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public BookingAvro build() {
      try {
        BookingAvro record = new BookingAvro();
        record.bookingNumber = fieldSetFlags()[0] ? this.bookingNumber : (String) defaultValue(fields()[0]);
        record.product = fieldSetFlags()[1] ? this.product : (String) defaultValue(fields()[1]);
        record.remarkExternal = fieldSetFlags()[2] ? this.remarkExternal : (String) defaultValue(fields()[2]);
        record.remarkInternal = fieldSetFlags()[3] ? this.remarkInternal : (String) defaultValue(fields()[3]);
        record.summaryDescriptionOfGoods = fieldSetFlags()[4] ? this.summaryDescriptionOfGoods : (String) defaultValue(fields()[4]);
        record.summaryMarksAndNumbers = fieldSetFlags()[5] ? this.summaryMarksAndNumbers : (String) defaultValue(fields()[5]);
        record.totalBookedGrossWeight = fieldSetFlags()[6] ? this.totalBookedGrossWeight : (String) defaultValue(fields()[6]);
        record.totalBookedInnerItemQuantity = fieldSetFlags()[7] ? this.totalBookedInnerItemQuantity : (String) defaultValue(fields()[7]);
        record.totalBookedItemQuantity = fieldSetFlags()[8] ? this.totalBookedItemQuantity : (String) defaultValue(fields()[8]);
        record.totalBookedNetNetWeight = fieldSetFlags()[9] ? this.totalBookedNetNetWeight : (String) defaultValue(fields()[9]);
        record.totalBookedNetWeight = fieldSetFlags()[10] ? this.totalBookedNetWeight : (String) defaultValue(fields()[10]);
        record.totalBookedPackageQuantity = fieldSetFlags()[11] ? this.totalBookedPackageQuantity : (String) defaultValue(fields()[11]);
        record.totalBookedVolume = fieldSetFlags()[12] ? this.totalBookedVolume : (String) defaultValue(fields()[12]);
        record.totalCargoValue = fieldSetFlags()[13] ? this.totalCargoValue : (String) defaultValue(fields()[13]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<BookingAvro>
    WRITER$ = (org.apache.avro.io.DatumWriter<BookingAvro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<BookingAvro>
    READER$ = (org.apache.avro.io.DatumReader<BookingAvro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
