KAFKA_BOOTSTRAPSERVERS: localhost:29092


server:
  port: 8091

spring:
  r2dbc:
    url: r2dbc:postgresql://localhost:5432/postgres
    username: postgres
    password: soil
  cloud:
    compatibility-verifier:
      enabled: false

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAPSERVERS}
    properties:
      spring:
        json:
          trusted:
            packages: net.apmoller.crb.telikos.libraries.kafkaconsumer


    producer:


    consumer:


      max:
        poll:
          records: 1
      properties:
        spring.json.trusted.packages: "*"
        spring.json.use.type.headers: false
        spring.json.value.default.type: "net.apmoller.crb.telikos.libraries.kafkaconsumer.dto.BookingDTO"



enableCache: true
redis-config:
  setmax-size: 50
  eviction-type: LRU


kafka.topic: booking_dto_topic


logging:
  level:
    org:
      springframework:
        web: DEBUG
        data:
          r2dbc: DEBUG

  pattern:
    level: "[%thread] [%X{correlationId}] %-5level %logger{36} - %msg%n"


redis:
  ssl: true
  host: 127.0.0.1
  port: 6379
  cache-name: "cache-test"
  cache-ttl: 1


azure:
  storage:
    account-name: dasd
    account-key: dsasd
    blob-endpoint: url

