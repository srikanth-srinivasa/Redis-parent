KAFKA_BOOTSTRAPSERVERS: localhost:29092


server:
  port: 8091

spring:
  r2dbc:
    url: r2dbc:postgresql://localhost:5432/postgres
    username: postgres
    password: soil
  cloud:
    compatibility-verifier:
      enabled: false

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAPSERVERS}
    schema-registry-url: localhost:8081
    consumer-group: sample-group
    auto-offset-reset: earliest

    producer:
      group-id: sample-group
      auto:
        offset:
          reset: earliest
      properties:
        spring.json.add.type.headers: false
        spring.json.trusted.packages: "*"

    consumer:
      group-id: sample-group
      auto-offset-reset: earliest
      properties:
        spring.json.trusted.packages: "*"
        spring.json.use.type.headers: false
        spring.json.value.default.type: "com.demo.redis.patterns.dto.BookingAvro"





    properties:
      auto:
        register:
          schemas: true

      max:
        poll:
          records: 1





enableCache: true
redis-config:
  setmax-size: 50
  eviction-type: LRU


kafka.plain-topic: demo_topic
kafka.avro-topic: booking_topic
kafka.bootstrap-servers: ${KAFKA_BOOTSTRAPSERVERS}
kafka.schema-registry-url: localhost:8081
kafka.consumer-group: sample-group
kafka.auto-offset-reset: earliest




logging:
  level:
    org:
      springframework:
        web: DEBUG
        data:
          r2dbc: DEBUG

  pattern:
    level: "[%thread] [%X{correlationId}] %-5level %logger{36} - %msg%n"


redis:
  ssl: true
  host: 127.0.0.1
  port: 6379
  cache-name: "cache-test"
  cache-ttl: 1


azure:
  storage:
    account-name: dasd
    account-key: dsasd
    blob-endpoint: url

